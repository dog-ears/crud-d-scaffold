<?php

namespace App\Http\Controllers;

use App\Http\Requests;
use App\Http\Controllers\Controller;

use App\{{{ $name|NameName }}};
use Illuminate\Http\Request;


class {{{ $name|NameName }}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
		${{{ $name|nameNames }}} = {{{ $name|NameName }}}::getAllData($request)->paginate(10);

		return view('{{{ $name|nameNames }}}.index', compact('{{{ $name|nameNames }}}'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
		return view('{{{ $name|nameNames }}}.create')
			->with( 'list', {{{ $name|NameName }}}::getListFromAllRelationApps() );
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
{{{ if($name==user): }}}
        // only user model
        $input = $request->all();
        $input['password'] = bcrypt($input['password']);

		//create data
		{{{ $name|NameName }}}::create( $input );
{{{ else: }}}
		//create data
		{{{ $name|NameName }}}::create( $request->all() );
{{{ endif; }}}



		return redirect()->route('{{{ $name|nameNames }}}.index')->with('message', 'Item created successfully.');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show({{{ $name|NameName }}} ${{{ $name|nameName }}})
    {
		return view('{{{ $name|nameNames }}}.show', compact('{{{ $name|nameName }}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit({{{ $name|NameName }}} ${{{ $name|nameName }}})
    {
		return view('{{{ $name|nameNames }}}.edit', compact('{{{ $name|nameName }}}'))
			->with( 'list', {{{ $name|NameName }}}::getListFromAllRelationApps() );
    }

	/**
	 * Show the form for duplicatting the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function duplicate({{{ $name|NameName }}} ${{{ $name|nameName }}})
	{
		return view('{{{ $name|nameNames }}}.duplicate', compact('{{{ $name|nameName }}}'))
			->with( 'list', {{{ $name|NameName }}}::getListFromAllRelationApps() );
	}

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update({{{ $name|NameName }}} ${{{ $name|nameName }}}, Request $request)
    {
{{{ if($name==user): }}}
        // only user model
        $input = $request->all();
        if( $input['password'] === '' ){
            $input['password'] = $user->password;
        }else{
            $input['password'] = bcrypt($input['password']);
        }

		//update data
		${{{ $name|nameName }}}->update($input);
{{{ else: }}}
		//update data
		${{{ $name|nameName }}}->update($request->all());
{{{ endif; }}}

		return redirect()->route('{{{ $name|nameNames }}}.index')->with('message', 'Item updated successfully.');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy({{{ $name|NameName }}} ${{{ $name|nameName }}})
    {
		${{{ $name|nameName }}}->delete();

		return redirect()->route('{{{ $name|nameNames }}}.index')->with('message', 'Item deleted successfully.');
    }
}
