<?php

/**
Copyright (c) 2016 dog-ears

This software is released under the MIT License.
http://dog-ears.net/
*/

namespace dogears\CrudDscaffold\Relation;

use Illuminate\Filesystem\Filesystem;
use dogears\CrudDscaffold\Commands\ScaffoldMakeCommand;
use dogears\CrudDscaffold\Stubs\StubController;
use dogears\CrudDscaffold\Traits\MakerTrait;
use dogears\CrudDscaffold\Traits\NameSolverTrait;
use dogears\CrudDscaffold\Traits\OutputTrait;

class DeleteRelation {
    use MakerTrait,NameSolverTrait,OutputTrait;

    protected $files;
    protected $commandObj;
    protected $debug;

    public function __construct($command, Filesystem $files)
    {
        $this->files = $files;
        $this->commandObj = $command;
        $this->debug = false;
        $this->start();
    }

    protected function start()
    {
        //short cut
        $this->model_A_name = $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.app_model_class'));
        $this->model_B_name = $this->solveName($this->commandObj->argument('model_B'), config('CrudDscaffold.app_name_rules.app_model_class'));

        $this->deleteModel();
        $this->deleteView();
    }



    protected function deleteModel(){

        $this->deleteModel_modelA();
        $this->deleteModel_modelB();
        $this->deleteModel_modelB2();
    }

    protected function deleteModel_modelA(){

        //get output_path and filename
        $output_path = './app/';
        $output_filename = $this->model_A_name.'.php';

        //replace word
        $pattern = '#\n\n[ \r\t\f]*// generated by relation command - '.$this->model_A_name.','.$this->model_B_name.' - start(.*?)// end#s';    //Delete block generated by relation command
        $replacement = '';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );
    }

    protected function deleteModel_modelB(){

        //get output_path and filename
        $output_path = './app/';
        $output_filename = $this->model_B_name.'.php';

        //replace word
        $pattern = '#\n\n[ \r\t\f]*// generated by relation command - '.$this->model_A_name.','.$this->model_B_name.' - start(.*?)// end#s';    //Delete block generated by relation command
        $replacement = '';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );
    }

    protected function deleteModel_modelB2(){

        //get output_path and filename
        $output_path = './app/';
        $output_filename = $this->model_B_name.'.php';

        //replace word
        $pattern = '#^.*?// generated by relation command - '. $this->model_A_name. ','. $this->model_B_name. '\n#m';  //delete one line generated by relation command - model_A_name,model_B_name'
        $replacement = '';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );
    }



    protected function deleteView(){

        //get relation_display_column
        $output_path = './resources/views/'. $this->solveName($this->commandObj->argument('model_B'), config('CrudDscaffold.app_name_rules.app_route')). '/';
        $output_filename = 'index.blade.php';
        $src = $this->files->get($output_path. $output_filename);

        preg_match('#->'. $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.app_model_var')). '->([^}]*)#', $src, $m); 
        $relation_display_column = $m[1];

        $this->deleteView_index($relation_display_column);
        $this->deleteView_show($relation_display_column);
        $this->deleteView_form($relation_display_column);
    }

    protected function deleteView_index( $relation_display_column ){

        //(i) APPLE_TYPE_*** => APPLE_TYPE_ID

        //get output_path and filename
        $output_path = './resources/views/'. $this->solveName($this->commandObj->argument('model_B'), config('CrudDscaffold.app_name_rules.app_route')). '/';
        $output_filename = 'index.blade.php';

        //replace word
        $pattern = '#'.$this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.NAME_NAME')).'_'.mb_strtoupper($relation_display_column).'#';
        $replacement = $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.NAME_NAME')).'_ID';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );



        //(ii) apple_types.name => apple_type_id

        //replace word
        $pattern = '#'.$this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.app_migrate_tablename')). '.'. $relation_display_column. '#';
        $replacement = $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );



        //(iii) appleType->*** => apple_type_id

        //replace word
        $pattern = '#'.$this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.app_model_var')). '->'. $relation_display_column. '#s';
        $replacement = $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );
    }

    protected function deleteView_show( $relation_display_column ){

        //get output_path and filename
        $output_path = './resources/views/'. $this->solveName($this->commandObj->argument('model_B'), config('CrudDscaffold.app_name_rules.app_route')). '/';
        $output_filename = 'show.blade.php';

        //replace word
        $pattern = '#(.*<label for=")'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_'. $relation_display_column. '">'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.NAME_NAME')).'_'. mb_strtoupper($relation_display_column). '</label>(.*)<p class="form-control-static">{{\$'.
                    $this->solveName($this->commandObj->argument('model_B'), config('CrudDscaffold.app_name_rules.app_model_var')).'->'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.app_model_var')).'->'. $relation_display_column. '}}</p>(.*)#s';
        $replacement = '\1'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id">'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.NAME_NAME')).'_ID</label>\2<p class="form-control-static">{{$'.
                    $this->solveName($this->commandObj->argument('model_B'), config('CrudDscaffold.app_name_rules.app_model_var')).'->'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id}}</p>\3';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );
    }

    protected function deleteView_form( $relation_display_column ){

        //get output_path and filename
        $output_path = './resources/views/'. $this->solveName($this->commandObj->argument('model_B'), config('CrudDscaffold.app_name_rules.app_route')). '/';
        $output_filename = '_form.blade.php';

        //replace word
        $pattern = '#(.*)<label for="'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id-field">(.*)_'. $relation_display_column. '</label>(.*){!! Form::select\("'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id", \$list\["'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.app_model_class')).'"\], null,(.*)#s';
        $replacement = '\1<label for="'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id-field">\2_id</label>\3{!! Form::text("'.
                    $this->solveName($this->commandObj->argument('model_A'), config('CrudDscaffold.app_name_rules.name_name')).'_id", null,\4';

        //output(use OutputTrait)
        $this->outputReplace( $output_path, $output_filename, $pattern, $replacement, $debug = $this->debug );
    }
}