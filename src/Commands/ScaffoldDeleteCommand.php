<?php

namespace dogears\L5scaffold\Commands;

use Illuminate\Console\AppNamespaceDetectorTrait;
use Illuminate\Console\Command;
use Illuminate\Filesystem\Filesystem;
use Illuminate\Support\Composer;
use dogears\L5scaffold\Traits\MakerTrait;
use dogears\L5scaffold\Traits\NameSolverTrait;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputArgument;

class ScaffoldDeleteCommand extends Command
{
    use AppNamespaceDetectorTrait, MakerTrait, NameSolverTrait;

    /**
     * The console command name.
     *
     * @var string
     */
    protected $signature = 'delete:scaffold
                            {name : The name of the model. (Ex: AppleType)}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Delete a scaffold';

    /**
     * @var Composer
     */
    private $composer;

    /**
     * Create a new command instance.
     *
     * @param Filesystem $files
     * @param Composer $composer
     */
    public function __construct(Filesystem $files, Composer $composer)
    {
        parent::__construct();

        $this->files = $files;
        $this->composer = $composer;
    }

    /**
     * Execute the console command.
     *
     * @return mixed
     */
    public function fire()
    {
        //app_model_class
        $app_model_class = $this->solveName($this->argument('name'),config('l5scaffold.app_name_rules.app_model_class'));

        // Start Scaffold
        $this->info('Deleting ' . $this->solveName( $this->argument('name'), 'NameName' ) . '...');

        // Seed --------------------

        //factory
        $path = './database/factories/';
        $filename = 'ModelFactory.php';
        $src = $this->files->get($path.$filename);

        $pattern = '{\n\n// generated by scaffold - '.$app_model_class.' - start(.*?)// end}s';
        if( preg_match($pattern, $src) ){
            $src = preg_replace($pattern, "", $src);
            $this->info('remove generated data from factory');
        }else{
            $this->info('generated data is not Found in factory');
        }
        $this->files->put($path.$filename, $src);

        //DatabaseSeeder
        $path = './database/seeds/';
        $filename = 'DatabaseSeeder.php';
        $src = $this->files->get($path.$filename);

        $pattern = '{(.*?)//generated by scaffold - '.$app_model_class.'\n}';
        if( preg_match($pattern, $src) ){
            $src = preg_replace($pattern, "", $src);
            $this->info('remove generated data from DatabaseSeeder');
        }else{
            $this->info('generated data is not Found in DatabaseSeeder');
        }
        $this->files->put($path.$filename, $src);

        //Seed File
        $path = './database/seeds/';
        $filename = $this->solveName($this->argument('name'), config('l5scaffold.app_name_rules.app_seeder_class')).'TableSeeder.php';

        if ($this->files->exists($path.$filename)) {
            //Delete
            $this->files->delete($path.$filename);
            $this->info('Seeding is Deleted');
        }else{
            $this->info('Seeding ('.$path.$filename.') is not exists!');
        }

        //Model --------------------
        $path = './app/';
        $filename = $this->solveName($this->argument('name'), config('l5scaffold.app_name_rules.app_model_class')).'.php';

        if ($this->files->exists($path.$filename)) {
            //Delete
            $this->files->delete($path.$filename);
            $this->info('Model is Deleted');
        }else{
            $this->info('Model ('.$path.$filename.') is not exists!');
        }

        //Controller -------------------- 
        $path = './app/Http/Controllers/';
        $filename = $this->solveName($this->argument('name'), config('l5scaffold.app_name_rules.app_controller_class')).'Controller.php';

        if ($this->files->exists($path.$filename)) {
            //Delete
            $this->files->delete($path.$filename);
            $this->info('Controller is Deleted');
        }else{
            $this->info('Controller ('.$path.$filename.') is not exists!');
        }

        //Views --------------------
        // Get path
        $path = './resources/views/'.$this->solveName($this->argument('name'), config('l5scaffold.app_name_rules.app_route'));

        if ($this->files->isDirectory($path)) {
            //Delete
            $this->files->deleteDirectory($path);
            $this->info('View is Deleted');
        }else{
            $this->info('View ('.$path.') is not exists!');
        }

        //Route --------------------
        $path = './app/Http/';
        $filename = 'routes.php';
        $src = $this->files->get($path.$filename);

        $pattern = '{(.*?)//generated by scaffold - '.$app_model_class.'\n}';
        if( preg_match($pattern, $src) ){
            $src = preg_replace($pattern, "", $src);
            $this->info('remove generated data from Route');
        }else{
            $this->info('generated data is not Found in Route');
        }
        $this->files->put($path.$filename, $src);

        $this->info('Delete is done.');
        $this->info('Rollback migration and delete migrate file if you need.');
    }

    /**
     * Get the console command options.
     *
     * @return array
     */
    protected function getOptions()
    {
        return [];
    }
}
